/**
 * Author: Steven Dunn
 * Date Created: December 13, 2017
 *
 * Base loj-calendar CSS. This file lives outside of app > src to avoid the need to target
 * the child calendar components with /deep/ or ng-deep (which may become deprecated).
 */
@import "../../variables";

// TESTING ONLY. Shows all possible date colors when hovering, selecting dates, etc.
$test-date-colors: false;

.calendar-container {
  background: $white;
  // Shift down only. Use 1px spread with Lighter Greys
  box-shadow: 0 1px 6px 0 $grey-secondary;

  // Other Box Shadow options
  // box-shadow: 1px 1px 6px 1px $grey-secondary; // Shift Right and Down. Lighter grey with spread
  // box-shadow: 1px 1px 6px 0 $dark-grey; // Shift shadow right and down. Darker grey. No spread.
  // box-shadow: 1px 2px 6px 1px $grey-secondary; // Shift down further
}

.ng-calendar {
  background-color: white;
  display: inline-block;
  font-family: $regular;
  vertical-align: top; //Line it up with the right-side elements
  margin-top: -.3rem; //compensate for the header having a height of 4.25rem instead of 4rem
  // Prevent the blue border ring on focus
  &:focus {
    outline: none
  }
}

// Override the default select elements
.custom-select {
  background: #fff url("../../../../assets/images/icons/drop-down-arrow.png") no-repeat right 0.75rem center;
  background-size: 10px;
  border: 1px solid $light-grey;
  border-radius: 0; //0.1rem
  width: 100px !important; //!important required to overwrite bootstrap inline style

  &:last-child {
    margin-left: 15px;
    width: 100px !important; //!important required to overwrite bootstrap inline style;
  }
}

.pt-1 {
  padding-top: 0;
}

// Controls spacing between the calendars
.ml-3 {
  margin-left: 2.5714em; //redline is 36px
}

.ng-calendar {
  border: none;
  position: relative;

  .ngb-dp-day, .ngb-dp-weekday {
    // All em sizes are determined by the font-size of .calendar-container. See calendar.component.scss
    font-size: 1em;
    height: 2.73em;
    width: 2.73em; //At larger widths, this may need to change or be unset
    position: relative;
  }

  // Decrease space between the weekday labels and the calendar days.
  .ngb-dp-weekday {
    height: 2.2em;
  }

  .ngb-dp-day {
    &.hidden {
      border: 1px solid #F2F2F2;
      background: #FFFFFF;
    }
    &.disabled {
      pointer-events: none;
      opacity: 1;
    }
    &:focus {
      outline: none;
    }
  }

  // Navigation arrows
  .btn-link {
    position: absolute;
    //top: calc(50% - 12px); //Arrow height is 29px
    color: $loj-blue;
    z-index: 1;
    top: 45px;
    width: 20px; //Fixed positioning bug in safari
    cursor: pointer;

    @media #{$medium} {
      &:hover {
        color: $loj-orange;
      }
    }

    &:disabled, &:disabled:hover {
      color: $grey-primary;
    }
  }

  .ngb-dp-month {
    background-color: $white;
    //height: 87.6471%;
  }

  .text-info {
    background-color: #FFFFFF;
    color: $grey-primary;
  }

  .ngb-dp-week {
    //border-top: 1px solid #F2F2F2;
    //border-bottom: 1px solid #F2F2F2;
    //Hide borders for the first date row. (Note: technically the Mon, Tues, Weds text is the first row)
    &:nth-of-type(2), &:nth-of-type(1) {
      border: none;
    }
  }

  .ngb-dp-months.px-1, .ngb-dp-months.pb-1 {
    padding: 0;
  }

  .ngb-dp-month-name {
    background-color: $white;
    color: $loj-blue;
    font-weight: bold;
    //border-top: 1px solid #F2F2F2;
    border-top: none;
    font-size: 1.1429em;
    height: 2em; //ng-bootstrap default
    margin-top: 0; //Controls space between the month title and top of the calendar
    margin-bottom: 6px; //Controls space between the month title and the weekdays
  }
  .ngb-dp-header {
    background-color: transparent;
  }
  .ngb-dp-months {
    background-color: $white;
    @include disable-user-select;
    pointer-events: none;
    // Prevent the blue border ring on focus
    &:focus {
      outline: none
    }
    margin-top: 7px;
  }

  .ngb-dp-arrow-btn {
    &:focus {
      outline: none;
    }
  }
}

// Override default
.justify-content-between {
  justify-content: center;
}

ngb-datepicker-navigation-select {
  height: 32px;
  text-align: center;
}

.custom-day {
  text-align: center;
  //padding: 0.185rem 0.25rem; // Original ng=bootstrap default
  //display: inline-block;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  font-size: 1em;
  height: 100%;
  width: 100%;
  border: 1px solid #F2F2F2;
  background-color: #FFFFFF;

  // Compare Checkbox: Off
  // isFrom       Becomes this color when selected.
  // isTo         Becomes this color when selected.
  //
  // isInside     Become this color when isFrom and isTo are both selected
  // isInside     All dates in the range except fromDate, toDate, and the date under the cursor
  &.range {
    border: none;
    background-color: $loj-blue; //background-color: #0275d8; //Original
    color: white;
  }

  // Compare Checkbox: Off
  // isFrom         Does NOT color
  // isTo           Does NOT color
  // Under Cursor   Does NOT color
  //
  // Situation: The user selected a from date and is now actively looking for a ToDate
  // This class colors the potential-range being considered by the user
  &.potential-range {
    border: none;
    background-color: $loj-blue;
    color: white;
    @if $test-date-colors == true {
      background-color: pink;
    }
  }

  // Compare checkbox: Off
  // Colors dates under the cursor at all times.
  &:hover {
    border: none;
    color: white;
    background-color: darken($loj-blue, 10%);
    @if $test-date-colors == true {
      background-color: sandybrown;
    }
  }

  &.focused {
    //background-color: #e6e6e6;
  }

  // Caution: This only controls the custom-date. To truly make the date disabled, you must disable the
  // using [markDisabled]="isDisabled" on the ngb-calendar itself
  &.disabled {
    cursor: not-allowed; //This will only work if you add pointer-events back to .ngb-dp-day.disabled
    opacity: 1;
    color: #B1B4B8;

    //If you want to hide the numbers completely
    //color: transparent;
    //opacity: 1;
  }

  &.has-data:after {
    $circle-size: 0.5714em;
    content: '';
    display: block;
    position: absolute;
    bottom: 4px;
    left: calc(50% - (#{$circle-size} / 2));
    width: $circle-size;
    height: $circle-size;
    background: $loj-green;
    border-radius: 50%;
  }
}

// Compare Checkbox: On
// isCompareFrom    Becomes this color when selected.
// isCompareTo      Becomes this color when selected.
// isCompareInside  Become this color when isCompareFrom and isCompareTo are both selected
// isCompareInside  Refers to all dates in compare-range except isCompareFrom, isCompareTo, and the date under the cursor
.custom-day.compare-range {
  border: none;
  color: white;
  background-color: $loj-orange;

  @if $test-date-colors == true {
    background-color: yellow;
  }
}

// Ensure the hover color under the cursor is always the same
// This is when selecting fromDate or toDate, but hovering over the opposite range (i.e. compare-range)
.custom-day.compare-range:hover {
  border: none;
  color: white;
  background-color: darken($loj-blue, 10%);

  @if $test-date-colors == true {
    background-color: sandybrown;
  }
}

// Compare Checkbox: On
// isCompareFrom    Does NOT color
// isCompareTo      Does NOT color
// Under Cursor     Does NOT color
//
// Situation: The user selected a isCompareFrom date and is now actively looking for a isCompareTo date
// Colors the potential-range being considered by the user
.custom-day.compare-potential-range {
  border: none;
  color: white;
  background-color: $loj-orange;

  @if $test-date-colors == true {
    background-color: lightslategray;
  }
}

// Compare Checkbox: On
// Situation: The user is searching for an isCompareFrom or isCompareTo Date
// Colors all dates under the cursor at all times
.custom-day.comparing:hover {
  border: none;
  color: white;
  background-color: darken($loj-orange, 10%);

  @if $test-date-colors == true {
    background-color: brown; //background-color: #0275d8; //Original
  }
}

// Colors overlapping days (dates that are in both ranges) AFTER the range has been selected
.custom-day.range.compare-range {
  border: none;
  color: white;
  background-color: $loj-green;

  @if $test-date-colors == true {
    background-color: fuchsia; //background-color: #0275d8; //Original
  }
}

// Compare Checkbox: On
// Situation: The user has already selected all four dates.
// and is searching for a fromDate or toDate
//
// Colors overlapping days (dates that are in both ranges). This color goes away once toDate is selected.
.custom-day.compare-range.potential-range {
  background-color: $loj-green;
  @if $test-date-colors == true {
    background-color: purple;
  }
}

// Compare Checkbox: On
// Situation: The user has already selected all four dates.
// and is searching for a compareFromDate or compareToDate
//
// Colors overlapping days (dates that are in both ranges). This color goes away once isCompareTo is selected.
.custom-day.range.compare-potential-range {
  background-color: $loj-green;
  @if $test-date-colors == true {
    background-color: darkkhaki;
  }
}

// Situation: The user has already selected all four dates.
// The user is changing either the isFrom or isTo date.
//
// Colors overlapping days (dates that are in both ranges) that are already selected on the calendar
// and are now being hovered over.
// Basically just makes sure the cursor stays the same color when hovering
.custom-day.overlapped:hover {
  background-color: darken($loj-blue, 10%);
  @if $test-date-colors == true {
    background-color: sandybrown;
  }
}

// Situation: The user has already selected all four dates.
// The user is changing either the compareFromDate or compareToDate date.
//
// Colors overlapping days (dates that are in both ranges) that are already selected on the calendar
// and are now being hovered over.
// Basically just makes sure the cursor stays the same color when hovering
.custom-day.overlapped.comparing:hover {
  background-color: darken($loj-orange, 10%);
  @if $test-date-colors == true {
    background-color: brown;
  }
}

.select-date-title {
  color: $loj-blue;
  font-weight: bold;
  font-size: 1.1429em;
  position: relative;
  top: -3px;
}

.date-inputs, .date-pickers {
  padding: 1.2857em 0; // Redline: 18px 18px;
}

.date-pickers {
  padding-right: 1.2857em;
  padding-top: 1.5714em;
}

.date-inputs {
  display: flex;
  justify-content: center;
  padding-left: 1.2857em;
  border-left: 2px solid $light-grey;
}

.loj-form {
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-direction: column;

  .toggle-switch {
    margin-left: 10px;
    font-size: 1em;
    width: 50px;
    height: 24px;
    vertical-align: top;
    position: static; // Let flexbox control the position

    &.small {
      height: 22px;
    }
  }

  .switch-circle {
    width: 20px;
    height: 20px;

    &.small {
      width: 18px;
      height: 18px;
    }
  }

  .input-container {
    width: 160px;
  }

  input {
    width: 100%;
    padding: 10px 0 10px 78px;

    //&::-webkit-input-placeholder { /* Chrome/Opera/Safari */
    //  position: relative;
    //  left: -20px;
    //  font-size: 1em;
    //  overflow: visible;
    //}
    //&::-moz-placeholder { /* Firefox 19+ */
    //  position: relative;
    //  left: -20px;
    //  font-size: 1em;
    //  overflow: visible;
    //}
    //&:-ms-input-placeholder { /* IE 10+ */
    //  position: relative;
    //  left: -40px;
    //  font-size: 1em;
    //  overflow: visible;
    //}
    //&:-moz-placeholder { /* Firefox 18- */
    //  position: relative;
    //  left: -10px;
    //  font-size: 1em;
    //  overflow: visible;
    //}
  }

  label {
    top: 10px;
    left: 10px;
    //text-transform: uppercase;
    font-size: 0.85714em;
  }
}

.compare-to-toggle {
  vertical-align: top;
  display: flex;
  align-items: center;
  justify-content: center;
}

.ui-dropdown-label {
  padding-top: 4px;
}
